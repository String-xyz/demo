name: deploy
permissions:
  id-token: write
  contents: read
on:
  push:
    branches: [main]
jobs:
  deploy:
    environment:
      name: demo
      url: https://demo.string.xyz

    name: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: setup nodejs
        uses: actions/setup-node@v2.1.3
        with:
          node-version: 18.0.0

      - name: generate env
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_VITE_ENV: ${{ secrets.DEMO_ENV }}
          envkey_VITE_API_BASE_PATH: ${{ secrets.DEMO_PUBLIC_BASE_PATH }}
          envkey_VITE_CHECKOUT_PUBLIC_KEY: ${{ secrets.DEMO_CHECKOUT_PUBLIC_KEY }}
          envkey_VITE_IPFS_GATEWAY: ${{ secrets.IPFS_GATEWAY }}
          envkey_VITE_IPFS_HASH: ${{ secrets.IPFS_HASH }}

          filename: .env
          directory: ./

      - name: install deps
        run: |
          yarn
          yarn run build

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.ASSUME_ROLE }}

      - name: login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: build, tag and push to Amazon ECR
        env:
          ECR_REPO: ${{ secrets.ECR_URL }}
          SERVICE: demo-app
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REPO/$SERVICE:$IMAGE_TAG .
          docker push $ECR_REPO/$SERVICE:$IMAGE_TAG

      - name: deploy
        env:
          CLUSTER: web-app
          SERVICE: demo-app
          AWS_REGION: us-west-2
        run: |
          aws ecs --region $AWS_REGION update-service --cluster $CLUSTER --service $SERVICE --force-new-deployment
